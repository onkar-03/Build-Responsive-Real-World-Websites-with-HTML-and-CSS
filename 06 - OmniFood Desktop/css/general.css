/*
--- 01. Typography System : 

- Font Sizes (px) : 
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

- Font Weight :
Default  :400
Medium  :500
Semi-bold : 600 
Bold : 700

- Line-Height : 

- Letter Spacing : 

1.2px
0.5px
0.75px

Default : 1
Small : 1.05
Paragraph : 1.6

--- 02. Colors : 

- Primary Color : #e67e22

- Tints : #fdf2e9
- Shades :#cf711f
- Accents :
- Grays :

--- 03. Images: 

--- 04. Colors  : 
- #333
- #555
--- 05. Shadows : 

--- 06. Border-Radius :

- 9px : pixels as i dont want to alter it 

--- 07. Whitespace :

- Spacing System (px) : 
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
*/

/* Global Reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  /* Default font-size: 16px */
  /* font-size: 10px; */
  /* 10 / 16 = 0.625 = 62.5%; */
  /* Percentage of User Browser font-size setting */
  font-size: 62.5%;
}

/* Simple styles to the Body */
body {
  font-family: 'Rubik', sans-serif;
  line-height: 1;
  font-weight: 400;
  color: #555;
}

/* ********************** */
/* GENERAL REUSABLE COMPONENTS  */
/* ********************** */

/* Reusable Centered Container */
.container {
  /* Standard Width mostly : 1200px , 1140px */
  max-width: 120rem;

  /* Adding padding to avoid sticky content on responsive design similar to hero */
  padding: 0 3.2rem;

  /* Centering Using Margin Trick*/
  margin: 0 auto;
}

/* Creating Reusable Grid */
.grid {
  display: grid;
  row-gap: 9.6rem;
  column-gap: 6.4rem;
}

/* Creating Reusable Grids with Multiple Columns */

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr);
}

.grid--3-cols {
  grid-template-columns: repeat(3, 1fr);
}

.grid--4-cols {
  grid-template-columns: repeat(4, 1fr);
}

.grid--center-v {
  /* Center all the content inside the columns */
  align-items: center;
}
.heading-primary,
.heading-tertiary,
.heading-tertiary {
  font-weight: 700;
  color: #555;
  line-height: 1.05;
}

.heading-primary {
  font-size: 5.2rem;
  margin-bottom: 32px;
  letter-spacing: -0.5px;
}

.heading-secondary {
  font-size: 4.4rem;

  /* As the screen decrease multiple line heading is formed hence line-height */
  line-height: 1.2;

  margin-bottom: 9.6rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3.2rem;
}

.subheading {
  /* As span inline element */
  display: block;
  font-size: 1.6rem;
  font-weight: 500;
  color: #cf711f;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
  letter-spacing: 0.75px;
}

.btn:link,
.btn:visited {
  /* Inline Block needs to be declared to apply padding */
  display: inline-block;

  background-color: #e67e22;
  text-decoration: none;
  font-size: 2rem;
  color: #fff;

  padding: 1.6rem 3.2rem;
  border-radius: 10px;

  /* No cursor:pointer; as for anchor elements by default the cursor changes to pointer */

  /* Adding smooth transition of to buttons from one state to another */

  /* Always add transition to original state */
  transition: background-color 0.3s;

  font-weight: 600;
}

.btn--main:link,
.btn--main:visited {
  background-color: #e67e22;
  color: #fff;
}

.btn--main:hover,
.btn--main:active {
  background-color: #cf711f;
  color: #fff;
}

.btn--secondary:link,
.btn--secondary:visited {
  background-color: #fff;
  color: #555;
}

.btn--secondary:hover,
.btn--secondary:active {
  background-color: #fdf2e9;

  /* To add Border Inside using box-shadow inset property */
  box-shadow: 0 0 0 3px #fff inset;
  color: #555;
}

/* Used a Helper Class to add right margin using this class whenever we want  */
/* ! important to specify highest priority */
.margin-right-sm {
  margin-right: 1.6rem !important;
}
